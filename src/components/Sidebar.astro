---
import '../styles/global.css';
import TOC from './TOC.astro';
import { fade } from "astro:transitions";
const posts = import.meta.glob('../pages/posts/*.md', { eager: true });
const { title = "NAN", sections = [] } = Astro.props;

// To array
const postList = Object.entries(posts).map(([path, post]: [string, any]) => {
  const slug = path
    .replace('../pages/posts/', '')
    .replace(/\.md$/, '');

  return {
    slug, 
    ...post.frontmatter,
  };
}).filter((post) => post.show);

postList.sort((a, b) => a.order - b.order);

const currentPath = Astro.url.pathname;

const anim = {
  old: {
    name: "collapse",
    duration: "0.5s",
    easing: "ease-in",
    direction: "reverse",
  },
  new: {
    name: "collapse",
    duration: "0.5s",
    easing: "ease-in-out",
  },
};

const collapse = {
  forwards: anim,
  backwards: anim,
};
---

<div class="h-screen w-64 bg-gray-800 text-white fixed top-0 left-0 flex flex-col">
    <nav class="flex-1 overflow-y-auto">
	<h2 class="space-y-2 pt-4 pl-4">Contents:</h2>
	<ul class="space-y-2 pl-4" style={"padding-left: 1rem;"} >
		{postList.map(post => { 
		const isActive = `/posts/${post.slug}` === currentPath;
		return (
		  <li class="text-xl post">
		      <a href={`/posts/${post.slug}`} class = {"hover:font-bold "+(isActive ? 'active' : '')}>{post.title}</a>
		      {isActive && <div id="toc-wrapper" class="expand" transition:animate={collapse}><TOC title={title} sections={sections} /></div>}
		  </li>
		)})}
      </ul>
    </nav>
    <div class="p-4 border-t border-gray-700">
      <a href="/" class="block text-sm text-gray-400 hover:text-white">
        Back to Home
      </a>
    </div>
</div>

<style>
.active {
  font-weight: bold;
  text-decoration: underline;
}
</style>
